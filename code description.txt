about the code dumped in the transmitter

The code consists of a few lines, which is simple for a beginner to understand so let's go through it right away!
 We first define the pin, D2 (digital pin 2) which the LED is connected to. Then, in the second line, we define an extended size variable, lastTransmission, which we will use later to store some bytes of data. In the third line, we declare a read-only variable, interval, which is set to the integer, 1000. Now, we are now at the infamous void setup section, starting with declaring the baud rate for serial communication, 115200 bauds. We also set the LED pin which we have declared, as an output pin, meaning that information will be sent to that pin. The void loop is now here, starting off with an if statement​, stating: if the time counted from the start is bigger than the value of the lastTransmisson + interval, then do the following. If the if statement is true, it prints a message, "AT+SEND=0,8, Testing!", and turns on the LED, waits for 100 milliseconds, turns the LED off again and sets the variable lastTransmisssion, as the value of the time counted from the beginning to be used in the loop. This whole if statement will be looped over and over again and this wraps up the explanation for this piece of code.

about the code dumped in the receiver

Similar to most of the codes we have in our projects on this website, this piece of code is fairly simple and beginner-friendly, so let's get through it! Similar to the code in the transmitter, we also define a pin for our LED, D2 (digital pin 2) in our first line, then we declare a variable in the form of a string, called incomingString​. Now, the void setup ​part has arrived, with the first line declaring the baud rate for the serial communication, 115200 bauds. The second line sets the output pin of the LED, D2 (digital pin 2), so that information can be sent to that pin instead of information being sent from that pin. Now ​​comes the void loop section which starts with an if statement ​stating: if serial data is available, replace the variable of incomingString​ with the serial strings coming in. Another if statement​ is also after that, which states: if the incoming string of data looks like the string, "Testing!", turn on the LED, wait for a 100 milliseconds and turn the LED off again. These two if statements​ will be going forever until the power of the circuit is disconnected or there is a malfunction in the circuit. The explanation is finished.
